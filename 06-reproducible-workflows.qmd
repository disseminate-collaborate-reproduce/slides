---
title: "Reproducible Workflows"
author: "Dr Mine Dogucu"
format: 
  revealjs:
    slide-number: true
    theme: ["slide-style.scss"]
    incremental: false

---

## Goals

- Naming files
- README.md
- gitignore
- Importing data
- Collaborating on GitHub

## Naming files

Three principles of naming files 

- machine readable
- human readable
- plays well with default ordering (e.g. alphabetical and numerical ordering)

(Jenny Bryan)

The workshop file and folder names follow

- the tidyverse style (all lower case letters, words separated by HYPHEN)

## README.md

class: middle

- README file is the first file users read. In our case a user might be our future self, a teammate, or (if open source) anyone.

- There can be multiple README files within a single directory: e.g. for the general project folder and then for a data subfolder. Data folder README's can possibly contain codebook (data dictionary).


- It should be brief but detailed enough to help user navigate. 

- a README should be up-to-date.

- On GitHub we use markdown for README file (`README.md`). Good news: [emojis are supported.](https://gist.github.com/rxaviers/7360908)

## README examples

- [A manuscript](https://github.com/mdogucu/web-scrape)
- [Museum of Modern Art Collection](https://github.com/MuseumofModernArt/collection)
- [R package bayesrules](https://github.com/bayes-rules/bayesrules)

## .gitignore

A `.gitignore` file contains the list of files which Git has been explicitly told to ignore. 


For instance `README.html` can be git ignored.


You may consider git ignoring confidential files (e.g. some datasets) so that they would not be pushed by mistake to GitHub. 


A file can be git ignored either by point-and-click using RStudio's Git pane or by adding the file path to the `.gitignore` file. For instance `weather.csv` data file in a `data` folder need to be added as `data/weather.csv`


Files with certain files (e.g. all `.log` files) can also be ignored. See [git ignore patterns](https://www.atlassian.com/git/tutorials/saving-changes/gitignore).




## Importing .csv Data 


```{r eval = FALSE}
readr::read_csv("dataset.csv")
```



class: middle

## Importing Excel Data

```{r eval = FALSE}
readxl::read_excel("dataset.xlsx")
```

 


## Importing Excel Data

```{r eval = FALSE}
readxl::read_excel("dataset.xlsx", sheet = 2)
```



## Importing SAS, SPSS, Stata Data

```{r eval = FALSE}
library(haven)
# SAS
read_sas("dataset.sas7bdat")
# SPSS
read_sav("dataset.sav")
# Stata
read_dta("dataset.dta")
```



## Where is the dataset file?

A very [important tweet](https://twitter.com/hadleywickham/status/940021008764846080?s=20) to discuss.

Importing data will depend on where the dataset is on your computer. However we use the help of `here::here()` function. 
This function sets the working directory to the project folder (i.e. where the `.Rproj` file is).

```{r eval = FALSE}
read_csv(here::here("data/dataset.csv"))
```
