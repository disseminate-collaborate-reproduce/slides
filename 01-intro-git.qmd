---
title: "Introduction to Git and GitHub"
author: "Dr. Mine Dogucu"
format: 
  revealjs:
    slide-number: true
    theme: ["slide-style.scss"]
    incremental: false

---

## Meet your instructors

:::: {.columns}

::: {.column width="50%"}
::: {style="text-align: center;"}




<img src="https://www.minedogucu.com/img/headshot.jpg"
        alt="A headshot of a woman with curly, short, ear-length hair with green eyes and red lipstick."
        style="width:165px; margin-top:20px; border: 3px solid whitesmoke; padding: 10px;">
        

`r fontawesome::fa(name = "link")`
<a href = "http://minedogucu.com">minedogucu.com</a>  
`r fontawesome::fa(name = "github")` <a href = "http://github.com/mdogucu">mdogucu</a>   
`r fontawesome::fa(name = "twitter")` <a href = "http://twitter.com/MineDogucu">MineDogucu</a>  
`r fontawesome::fa(name = "mastodon")` <a href = "https://mastodon.social/@MineDogucu">mastodon.social/@MineDogucu</a>  
`r fontawesome::fa(name = "linkedin")` <a href = "https://www.linkedin.com/in/minedogucu/">minedogucu</a> 

:::
:::

::: {.column width="50%"}

::: {style="text-align: center;"}




<img src="img/sinem.jpeg"
        alt="A headshot of a woman with curly, short, shoulder-length hair with green eyes."
        style="width:165px; margin-top:20px; border: 3px solid whitesmoke; padding: 10px;">
        

`r fontawesome::fa(name = "link")`
<a href = "http://sinemdemirci.github.io">sinemdemirci.github.io</a>  
`r fontawesome::fa(name = "github")` <a href = "http://github.com/sinemdemirci">sinemdemirci</a>   
`r fontawesome::fa(name = "twitter")` <a href = "http://twitter.com/sinemmdemirci">sinemmdemirci</a>  

`r fontawesome::fa(name = "linkedin")` <a href = "https://www.linkedin.com/in/drsinemdemirci/">drsinemdemirci</a> 

:::
:::



::::


## Outline

:::: {.columns}

::: {.column width="50%"}

What we will teach you

- Version control with git and GitHub
- Writing reproducible reports with Quarto
- Writing manuscripts with Quarto
- Making websites with Quarto

:::

::: {.column width="50%"}

What we assume you know

- R


:::



::::


## Who uses GitHub?

```{r}
#| echo: false
#| out.width: '100%'
#| fig.align: center
knitr::include_graphics('img/ggplot2-github.png')
```



## Who uses GitHub?

```{r}
#| echo: false
#| out.width: '100%'
#| fig.align: center
knitr::include_graphics('img/bbc-github.png')
```




## Version control

::: {.incremental}

- hw1
- hw1_final
- hw1_final2
- hw1_final3
- hw1_finalwithfinalimages
- hw1_finalestfinal

:::

## 

What if we tracked our file with a better names for each version?

::: {.incremental}

- hw1 **added name**
- hw1 **added question 1 image**
- hw1 **changed name/ added group mate**
- hw1 **added first draft of all questions**

We will call the descriptions in bold **commit** messages.

:::

##

```{r echo=FALSE, out.width='40%',fig.align='center'}
knitr::include_graphics('img/github-illustration.002.jpeg')
```


##

```{r echo=FALSE, out.width='55%', fig.align='center'}
knitr::include_graphics('img/github-illustration.003.jpeg')
```


##

```{r echo=FALSE, out.width='55%', fig.align='center'}
knitr::include_graphics('img/github-illustration.004.jpeg')
```


##

```{r echo=FALSE, out.width='55%', fig.align='center'}
knitr::include_graphics('img/github-illustration.005.jpeg')
```


##

```{r echo=FALSE, out.width='55%', fig.align='center'}
knitr::include_graphics('img/github-illustration.006.jpeg')
```


##

```{r echo=FALSE, out.width='50%', fig.align='center'}
knitr::include_graphics('img/github-illustration.007.jpeg')
```


##

### Art of commit messages that is learned with practice

**Commit often** but not too often. If in doubt, commit often.


## DEMO

<!--
<video width="80%" height="45%%" align = "center" controls>
  <source src="screencast/01g-intro-github-screen.mp4" type="video/mp4">
</video>
-->

It seems like you (I did too) wrote an R code which includes randomness but for which we forgot to set seed. Let's correct the error while also version controlling using the repo `01-intro-github-username`. 

## For now

Important task for now is to first **commit** and then **push**.

## Cloning a repo

**repo** is a short form of repository. Repositories contain all of your project's files as well as each file's revision history.

For this class our weekly repos (lecture code, quiz code etc.) are hosted on Github. 

To **clone** a GitHub repo to our computer, we first copy the cloning link as shown in screencast then start an RStudio project using that link.  

**Cloning** a repo pulls (downloads) all the elements of a repo available at that specific time. 



## Commits

Once you make changes to your repo (e.g. take notes during lecture, answer a quiz question). you can take a snapshot of your changes with a commit.

This way if you ever have to go back in version history you have your older commits to get back to. 
This is especially useful, for instance, if you want to go back to an earlier solution you have committed.





## Push

All the commits you make will initially be local (i.e. on your own computer). 

In order for me to see your commits and your final submission on any assignment, you have to **push** your commits. In other words upload your files at the stage in that specific time.



## (An incomplete) Git/GitHub glossary

**Git:** is software for tracking changes in any set of files

**GitHub:** is an internet host for Git projects.

**repo:** is a short form of repository. Repositories contain all of your project's files as well as each file's revision history.

**clone:** Cloning a repo **pulls** (downloads) all the elements of a repo available at that specific time. 

**commit:** A snapshot of your repo at a specific point in time. We distinguish each commit with a **commit message**. 

**push:** Uploads the latest "committed" state of your repo to GitHub.





## git it?

